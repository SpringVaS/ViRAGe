theory Eliminates
  imports "../Components/Electoral_Module"
          Non_Electing
          Rejects

begin

(*
   As opposed to "rejects", "eliminates" allows to stop rejecting if no
   alternatives were to remain.
*)
definition eliminates :: "nat \<Rightarrow> 'a Electoral_Module \<Rightarrow> bool" where
  "eliminates n m \<equiv>
    electoral_module m \<and>
      (\<forall>A p. (card A > n \<and> finite_profile A p) \<longrightarrow> card (reject m A p) = n)"

lemma single_elim_imp_red_def_set:
  assumes
    eliminating: "eliminates 1 m" and
    leftover_alternatives: "card A > 1" and
    f_prof: "finite_profile A p"
  shows "defer m A p \<subset> A"
  using Diff_eq_empty_iff Diff_subset card_eq_0_iff defer_in_alts
        eliminates_def eliminating eq_iff leftover_alternatives
        not_one_le_zero f_prof psubsetI reject_not_elec_or_def
  by metis

lemma single_elim_decr_def_card:
  assumes
    rejecting: "rejects 1 m" and
    not_empty: "A \<noteq> {}" and
    non_electing: "non_electing m" and
    f_prof: "finite_profile A p"
  shows "card (defer m A p) = card A - 1"
  using Diff_empty One_nat_def Suc_leI card_Diff_subset card_gt_0_iff
        defer_not_elec_or_rej finite_subset non_electing
        non_electing_def not_empty f_prof reject_in_alts rejecting
        rejects_def
  by (smt (verit, ccfv_threshold))

lemma single_elim_decr_def_card2:
  assumes
    eliminating: "eliminates 1 m" and
    not_empty: "card A > 1" and
    non_electing: "non_electing m" and
    f_prof: "finite_profile A p"
  shows "card (defer m A p) = card A - 1"
  using Diff_empty One_nat_def Suc_leI card_Diff_subset card_gt_0_iff
        defer_not_elec_or_rej finite_subset non_electing
        non_electing_def not_empty f_prof reject_in_alts
        eliminating eliminates_def
  by (smt (verit))

end