theory Rules_For_Condorcet_Maximum
  imports "../Properties/Condorcet_Maximum"
          "../Properties/Condorcet_Rating"

begin

(*
   If e is Condorcet-rating, the following holds:
   If a Condorcet Winner w exists, w has the maximum evaluation value.
*)
theorem cond_winner_imp_max_eval_val:
  assumes
    rating: "condorcet_rating e" and
    f_prof: "finite_profile A p" and
    winner: "condorcet_winner A p w"
  shows "e w A p = Max {e a A p | a. a \<in> A}"
proof -
  (*
    lemma eq_max_iff: "\<lbrakk> finite A; A \<noteq> {} \<rbrakk> \<Longrightarrow>
        m = Max A  \<longleftrightarrow>  m \<in> A \<and> (\<forall>a \<in> A. a \<le> m)"
  *)
  let ?set = "{e a A p | a. a \<in> A}" and
      ?eMax = "Max {e a A p | a. a \<in> A}" and
      ?eW = "e w A p"
  (*finite A*)
  from f_prof have 0: "finite ?set"
    by simp
  (*2. non-empty A*)
  have 1: "?set \<noteq> {}"
    using condorcet_winner.simps winner
    by fastforce
  (*3. m \<in> A*)
  have 2: "?eW \<in> ?set"
    using CollectI condorcet_winner.simps winner
    by (metis (mono_tags, lifting))
  (*4. (\<forall>a \<in> A. a \<le> m)*)
  have 3: "\<forall> e \<in> ?set . e \<le> ?eW"
    using CollectD condorcet_rating_def eq_iff
          order.strict_implies_order rating winner
    by (smt (verit, best))
  (*Result*)
  from 2 3 have 4:
    "?eW \<in> ?set \<and> (\<forall>a \<in> ?set. a \<le> ?eW)"
    by blast
  from 0 1 4 Max_eq_iff show ?thesis
    by (metis (no_types, lifting))
qed

(*
   If e is Condorcet-rating, the following holds:
   If a Condorcet Winner w exists, a non-Condorcet
   winner has a value lower than the maximum
   evaluation value.
*)
theorem non_cond_winner_not_max_eval:
  assumes
    rating: "condorcet_rating e" and
    f_prof: "finite_profile A p" and
    winner: "condorcet_winner A p w" and
    linA: "l \<in> A" and
    loser: "w \<noteq> l"
  shows "e l A p < Max {e a A p | a. a \<in> A}"
proof -
  have "e l A p < e w A p"
    using condorcet_rating_def linA loser rating winner
    by metis
  also have "e w A p = Max {e a A p |a. a \<in> A}"
    using cond_winner_imp_max_eval_val f_prof rating winner
    by fastforce
  finally show ?thesis
    by simp
qed

end